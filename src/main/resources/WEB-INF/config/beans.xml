<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/mvc
            https://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/aop
            https://www.springframework.org/schema/aop/spring-aop.xsd">
    <mvc:annotation-driven validator="globalValidator" />
    <mvc:resources mapping="/static/**" location="static/" />
    <mvc:interceptors>
        <!--  JSP View interceptors  -->
        <!-- userRequiredInterceptor -->
        <mvc:interceptor>
            <mvc:mapping path="/{userId:\d+}/**"/>
            <mvc:mapping path="/edit/**"/>
            <mvc:mapping path="/update/**"/>
            <mvc:mapping path="/logout"/>
            <mvc:exclude-mapping path="/{userId:\d+}"/>
            <bean class="com.log.blog.interceptor.UserRequiredInterceptor">
                <property name="errorPath" value="/error/403" />
            </bean>
        </mvc:interceptor>
        <!-- userOptionalInterceptor -->
        <mvc:interceptor>
            <mvc:mapping path="/"/>
            <mvc:mapping path="/{userId:\d+}"/>
            <mvc:mapping path="/article/{articleId:[A-Za-z\d]{32}}"/>
            <mvc:mapping path="/s"/>
            <bean class="com.log.blog.interceptor.UserOptionalInterceptor" />
        </mvc:interceptor>
        <!-- userLoggedInterceptor -->
        <mvc:interceptor>
            <mvc:mapping path="/login"/>
            <mvc:mapping path="/register"/>
            <bean class="com.log.blog.interceptor.UserLoggedInterceptor" />
        </mvc:interceptor>
        <!-- adminRequiredInterceptor -->
        <mvc:interceptor>
            <mvc:mapping path="/admin"/>
            <mvc:mapping path="/admin/**"/>
            <mvc:exclude-mapping path="/admin/error/*"/>
            <mvc:exclude-mapping path="/admin/login"/>
            <mvc:exclude-mapping path="/admin/register"/>
            <bean class="com.log.blog.interceptor.AdminRequiredInterceptor">
                <property name="errorPath" value="/admin/error/403" />
            </bean>
        </mvc:interceptor>
        <!-- adminLoggedInterceptor -->
        <mvc:interceptor>
            <mvc:mapping path="/admin/login"/>
            <mvc:mapping path="/admin/register"/>
            <bean class="com.log.blog.interceptor.AdminLoggedInterceptor" />
        </mvc:interceptor>

        <!--  Restful API interceptors  -->
        <!-- restUserRequiredInterceptor -->
        <mvc:interceptor>
            <mvc:mapping path="/api/user/**"/>
            <mvc:mapping path="/api/article"/>
            <mvc:mapping path="/api/article/**"/>
            <mvc:exclude-mapping path="/api/user/error*"/>
            <bean class="com.log.blog.interceptor.UserRequiredInterceptor">
                <property name="errorPath" value="/api/user/error401" />
                <property name="advancedExcludeMapping">
                    <set>
                        <value>/api/user/session                       -> POST</value>
                        <value>/api/user/{userId:\d{1,11}}             -> GET, DELETE</value>  <!-- DELETE由管理员拦截 -->
                        <value>/api/user/{userId:\d{1,11}}$base        -> GET</value>
                        <value>/api/user/list                          -> GET</value>  <!-- GET由管理员拦截 -->
                        <value>/api/article/{articleId:[A-Za-z\d]{32}} -> GET, DELETE</value>  <!-- DELETE由管理员拦截 -->
                        <value>/api/article/list                       -> GET</value>
                    </set>
                </property>
            </bean>
        </mvc:interceptor>
        <!-- restAdminRequiredInterceptor -->
        <mvc:interceptor>
            <mvc:mapping path="/api/admin"/>
            <mvc:mapping path="/api/admin/**"/>
            <mvc:mapping path="/api/user/{userId:\d{1,11}}"/>
            <mvc:mapping path="/api/user/list"/>
            <mvc:mapping path="/api/article/{articleId:[A-Za-z\d]{32}}"/>
            <mvc:exclude-mapping path="/api/admin/error*"/>
            <bean class="com.log.blog.interceptor.AdminRequiredInterceptor">
                <property name="errorPath" value="/api/admin/error401" />
                <property name="advancedExcludeMapping">
                    <set>
                        <value>/api/admin                  -> POST</value>
                        <value>/api/admin/session          -> POST</value>
                        <value>/api/user/{userId:\d{1,11}} -> GET</value>  <!-- GET由用户拦截 -->
                        <value>/api/article/{articleId:[A-Za-z\d]{32}} -> GET</value>
                    </set>
                </property>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>
    <mvc:view-resolvers>
        <mvc:content-negotiation>
            <mvc:default-views>
                <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
                    <property name="encoding" value="UTF8" />
                </bean>
            </mvc:default-views>
        </mvc:content-negotiation>
        <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
            <property name="prefix" value="/WEB-INF/templates/" />
        </bean>
    </mvc:view-resolvers>

    <!--  Password Encoder  -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

    <!--  MyBatis Config  -->
    <bean id="datasource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/blog?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=UTC" />
        <property name="username" value="root" />
        <property name="password" value="root" />
<!--        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>-->
<!--        <property name="url" value="${db.url}" />-->
<!--        <property name="username" value="${db.username}" />-->
<!--        <property name="password" value="${db.password}" />-->
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" depends-on="datasource">
        <property name="dataSource" ref="datasource" />
        <property name="mapperLocations" value="/WEB-INF/mappers/**.xml" />
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" depends-on="sqlSessionFactory">
        <property name="basePackage" value="com.log.blog.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <!--  Resolvers  -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10485760" />
    </bean>

    <!--  Validators  -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:Messages" />
        <property name="defaultEncoding" value="utf-8" />
        <property name="cacheSeconds" value="120" />
    </bean>
    <bean id="globalValidator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
        <property name="validationMessageSource" ref="messageSource" />
    </bean>
    <bean id="passwordAgainValidator" class="com.log.blog.validator.PasswordAgainValidator" />

    <!--  ConverterServices  -->
    <bean id="restConverterService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.log.blog.converter.Admin2RestAdminConverter" />
                <bean class="com.log.blog.converter.User2RestUserConverter">
                    <property name="contextPath" value="#{servletContext.contextPath}" />
                </bean>
                <bean class="com.log.blog.converter.Article2RestArticleConverter">
                    <property name="contextPath" value="#{servletContext.contextPath}" />
                </bean>
                <bean class="com.log.blog.converter.Range2RestRangeConverter" />
                <bean class="com.log.blog.converter.ArticleForm2ArticleConverter" />
            </set>
        </property>
    </bean>

    <!--  Restful Beans  -->
    <bean id="restErrors" class="com.log.blog.vo.rest.RestRootError" scope="prototype">
        <property name="details">
            <bean class="java.util.ArrayList" />
        </property>
    </bean>
    <bean id="restData" class="com.log.blog.vo.rest.RestData" scope="prototype" />
    <bean id="restResult" class="com.log.blog.vo.rest.RestResult" scope="request">
        <property name="errors" ref="restErrors" />
        <property name="data" ref="restData" />
        <property name="messageSource" ref="messageSource" />
        <aop:scoped-proxy />
    </bean>
</beans>
